#include <mpi.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
using namespace std;


int main(int argc, char** argv) {

	MPI_Init(NULL, NULL);
	int world_rank;
	MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);
	int world_size;
	MPI_Comm_size(MPI_COMM_WORLD, &world_size);
	double t1, t2;
	int token;
	t1 = MPI_Wtime();
	
	if (world_rank != 0) {
		MPI_Recv(&token, 1, MPI_INT, world_rank - 1, 0, MPI_COMM_WORLD,
			MPI_STATUS_IGNORE);
		printf("Process %d received token %d from process %d\n", world_rank, token,
			world_rank - 1);

	}
	else {
		printf("Vvedite 4islo ");
		cin >> token;

	}
	MPI_Send(&token, 1, MPI_INT, (world_rank + 1) % world_size, 0,
		MPI_COMM_WORLD);

	if (world_rank == 0) {
		MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD,
			MPI_STATUS_IGNORE);
		printf("Process %d received token %d from process %d\n", world_rank, token,
			world_size - 1);
	}
	t2 = MPI_Wtime();
	printf("Time : %0.4f\n", t2 - t1);
		fflush(stdout);


	MPI_Finalize();

}

